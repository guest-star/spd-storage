<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.spd.storage.dal.dao.SpdDepositoryDOMapper" >
  <resultMap id="BaseResultMap" type="com.spd.storage.dal.domain.SpdDepositoryDO" >
    <result column="id" property="id" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="dept_id" property="dept_id" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="dept_name" property="dept_name" jdbcType="VARCHAR" />
    <result column="manager_user_id" property="manager_user_id" jdbcType="VARCHAR" />
    <result column="manager_user_name" property="manager_user_name" jdbcType="VARCHAR" />
    <result column="parent_id" property="parent_id" jdbcType="VARCHAR" />
    <result column="bak" property="bak" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, name, dept_id, address, dept_name, manager_user_id, manager_user_name, parent_id, 
    bak
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.spd.storage.dal.domain.SpdDepositoryDOExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from s_depository
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.spd.storage.dal.domain.SpdDepositoryDOExample" >
    delete from s_depository
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.spd.storage.dal.domain.SpdDepositoryDO" >
    insert into s_depository (id, name, dept_id, 
      address, dept_name, manager_user_id, 
      manager_user_name, parent_id, bak
      )
    values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{dept_id,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{dept_name,jdbcType=VARCHAR}, #{manager_user_id,jdbcType=VARCHAR}, 
      #{manager_user_name,jdbcType=VARCHAR}, #{parent_id,jdbcType=VARCHAR}, #{bak,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.spd.storage.dal.domain.SpdDepositoryDO" >
    insert into s_depository
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="dept_id != null" >
        dept_id,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="dept_name != null" >
        dept_name,
      </if>
      <if test="manager_user_id != null" >
        manager_user_id,
      </if>
      <if test="manager_user_name != null" >
        manager_user_name,
      </if>
      <if test="parent_id != null" >
        parent_id,
      </if>
      <if test="bak != null" >
        bak,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="dept_id != null" >
        #{dept_id,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="dept_name != null" >
        #{dept_name,jdbcType=VARCHAR},
      </if>
      <if test="manager_user_id != null" >
        #{manager_user_id,jdbcType=VARCHAR},
      </if>
      <if test="manager_user_name != null" >
        #{manager_user_name,jdbcType=VARCHAR},
      </if>
      <if test="parent_id != null" >
        #{parent_id,jdbcType=VARCHAR},
      </if>
      <if test="bak != null" >
        #{bak,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map" >
    update s_depository
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.dept_id != null" >
        dept_id = #{record.dept_id,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null" >
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.dept_name != null" >
        dept_name = #{record.dept_name,jdbcType=VARCHAR},
      </if>
      <if test="record.manager_user_id != null" >
        manager_user_id = #{record.manager_user_id,jdbcType=VARCHAR},
      </if>
      <if test="record.manager_user_name != null" >
        manager_user_name = #{record.manager_user_name,jdbcType=VARCHAR},
      </if>
      <if test="record.parent_id != null" >
        parent_id = #{record.parent_id,jdbcType=VARCHAR},
      </if>
      <if test="record.bak != null" >
        bak = #{record.bak,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update s_depository
    set id = #{record.id,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      dept_id = #{record.dept_id,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      dept_name = #{record.dept_name,jdbcType=VARCHAR},
      manager_user_id = #{record.manager_user_id,jdbcType=VARCHAR},
      manager_user_name = #{record.manager_user_name,jdbcType=VARCHAR},
      parent_id = #{record.parent_id,jdbcType=VARCHAR},
      bak = #{record.bak,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>